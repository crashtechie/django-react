version: '3.8'

services:
  database:
    image: postgres:16-alpine
    container_name: customer_db
    environment:
      POSTGRES_DB: customer_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs/database:/var/log/postgresql
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d customer_management"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: customer_backend
    environment:
      - DATABASE_URL=postgresql://postgres@database:5432/customer_management
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,backend,frontend
    secrets:
      - db_password
    volumes:
      - ./logs/backend:/app/logs
      - ./backend/config:/app/config:ro
    networks:
      - internal
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: customer_frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./logs/web_server:/var/log/nginx
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - external
      - internal
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

networks:
  external:
    driver: bridge
    name: customer_management_external
  internal:
    driver: bridge
    internal: true
    name: customer_management_internal

volumes:
  postgres_data:
    driver: local

secrets:
  db_password:
    file: ./secrets/db_password.txt