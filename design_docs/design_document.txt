Design of this application should use docker compose utilizes the current stable version alpine linux for the container. All containers and application logs should be saved in the host under a /log folder of the docker-compose directory and all applications should be using the latest stable version of the application.  Best practices and security standards should be applied at all times for a development, stage, and production environment.  Unit testing, functional testing, and end to end testing for CI/CD pipelines that utilize gihub actions should be maintained. Where ever possible .toml files should be utilized to store secure configuration data, if .toml file is not available for configuration then .env files will be used.
The frontend container should be using nginx proxy and web vite/react-typescript servcies with content caching and should not start until backend is healthy.  The backend container should utilize uv image ghcr.io/astral-sh/uv:python3.13-alpine, django, and toml configurations and caching of data and should not start until database is healthy.  The database container should be an encrypted postgresql database.  An external network which should only have the frontend container and allow external communication should be crated and an internal network which should be user defined bridge and not allow external connections, but allows the containers to talk to each other.